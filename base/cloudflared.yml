apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 2 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          args:
            - "tunnel"
            - "--config"
            - "/etc/cloudflared/config/config.yaml"
            - "run"
          env:
            - name: TUNNEL_NAME
              value: k3s-tunnel
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds/credentials.json
              subPath: credentials.json
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds/cert.pem
              subPath: cert.pem
              readOnly: true
      volumes:
        - name: creds
          secret:
            secretName: tunnel-credentials
        - name: config
          configMap:
            name: cloudflared
            items:
              - key: config.yaml
                path: config.yaml
